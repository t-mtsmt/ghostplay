#!/bin/sh

ghostplay_cleanup_handler() {
  rm $GP_SOURCE_TEMP
  exit 0
}

ghostplay_sigint_handler() {
  exit 1
}

ghostplay_exit_handler() {
  tmpfile=$(mktemp "/tmp/ghostplay.XXXXXX")
  tail -n +$GP_LINE_NUMBER $GP_SOURCE_TEMP > $tmpfile
  mv $tmpfile $GP_SOURCE_TEMP
  if [ $GP_LINE_NUMBER -gt 1 ]; then
    $0 $GP_SOURCE_TEMP
  fi
  ghostplay_cleanup_handler
}

ghostplay_custom_sleep() {
  sleep "$1"
}

ghostplay_sleep() {
  ghostplay_custom_sleep "$1"
}

ghostplay_puts() {
  printf '%s' "$*"
}

ghostplay_custom_prompt() {
  ghostplay_puts "${GP_ESC}[32m${GP_USERNAME}@${GP_HOSTNAME}" \
          "${GP_ESC}[35m${PWD##*/}${GP_ESC}[0m\$ ${*:-}"
}

ghostplay_prompt() {
  ghostplay_before_prompt_hook
  ghostplay_custom_prompt
  ghostplay_after_prompt_hook
}

ghostplay_before_prompt_hook() {
  :
}

ghostplay_after_prompt_hook() {
  ghostplay_sleep 0.5
}

ghostplay_input() {
  if [ $# -lt 2 ]; then
    ghostplay_input "${1%"${1#?}"}" "${1#?}"
  else
    if [ "$1" = "" ]; then
      echo
    else
      ghostplay_type "$1"
      ghostplay_input "${2%"${2#?}"}" "${2#?}"
    fi
  fi
}

ghostplay_type() {
  ghostplay_before_type_hook
  ghostplay_puts "$1"
  ghostplay_after_type_hook
}

ghostplay_before_type_hook() {
  ghostplay_sleep 0.02
}

ghostplay_after_type_hook() {
  :
}

ghostplay_command_and_exec() {
  ghostplay_command "$1"
  ghostplay_exec "$1"
  ghostplay_prompt
}

ghostplay_command_and_fake() {
  ghostplay_command "$1"
  ghostplay_prompt
}

ghostplay_command_and_fake_nonbreak() {
  ghostplay_command "$1"
}

ghostplay_exec() {
  eval "$1"
}

ghostplay_command() {
  if [ "$GP_FIRST_PROMPT" ]; then
      ghostplay_prompt
      GP_FIRST_PROMPT=''
  fi
  ghostplay_input "$1"
}

ghostplay_line() {
  case $ghostplay_mode in
    "") ghostplay_command_and_exec "$1" ;;
    *) ghostplay_buf="$ghostplay_buf${ghostplay_buf:+$GP_LF}$1" ;;
  esac
}

ghostplay_directive_batch() {
  ghostplay_mode="batch"
}

ghostplay_directive_silent() {
  ghostplay_mode="silent"
}

ghostplay_directive_fake() {
  ghostplay_mode="fake"
  if [ "$1" = "nonbreak" ]; then
    ghostplay_mode="fake_nonbreak"
  fi
}

ghostplay_directive_flush() {
  [ "$ghostplay_buf" ] || return 0
  case $ghostplay_mode in
    batch) ghostplay_command_and_exec "$ghostplay_buf" ;;
    silent) ghostplay_exec "$ghostplay_buf" ;;
    fake) ghostplay_command_and_fake "$ghostplay_buf" ;;
    fake_nonbreak) ghostplay_command_and_fake_nonbreak "$ghostplay_buf" ;;
  esac
  ghostplay_buf=""
}

ghostplay_directive_end() {
  ghostplay_directive_flush
  ghostplay_mode=""
}

ghostplay_directive_sleep() {
  ghostplay_sleep "$1"
}

ghostplay_parse_script() {
  ghostplay_mode=""
  ghostplay_buf=""

  while IFS= read -r ghostplay_line || [ "$ghostplay_line" ]; do
    GP_LINE_NUMBER=`expr $GP_LINE_NUMBER + 1`
    ghostplay_work=$ghostplay_line

    while [ "$ghostplay_work" != "${ghostplay_work# }" ]; do
      ghostplay_work=${ghostplay_work# }
    done

    case $ghostplay_work in
      "#ghostplay "*) eval "ghostplay_directive_${ghostplay_work#"#ghostplay "}" ;;
      "" | "#!"* | "#"*) ;;
      *) ghostplay_line "$ghostplay_line" ;;
    esac
  done
}

ghostplay_run() {
  GP_FIRST_PROMPT=1
  ghostplay_parse_script
}

eval "$(printf "GP_LF='\\012' GP_ESC='\\033'")"

GP_USERNAME=$(whoami)
GP_HOSTNAME=$(hostname)
# shellcheck disable=SC2034
GP_SOURCE=$1
GP_SOURCE_TEMP=$(mktemp "/tmp/ghostplay.XXXXXX")
GP_LINE_NUMBER=1
cp $GP_SOURCE $GP_SOURCE_TEMP

[ "${SHELLSPEC_VERSION:-}" ] && return 0

trap 'ghostplay_sigint_handler' INT
trap 'ghostplay_exit_handler' EXIT

ghostplay_run < "$GP_SOURCE_TEMP"

# workaround: seq2gif is lose the last line.
echo
